<ToggleButton x:Class="Blaze.UIElements.ButtonPopup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Blaze.UIElements"
             mc:Ignorable="d" 
             xmlns:converter="clr-namespace:Blaze.Core"
             d:DesignHeight="450" d:DesignWidth="800">
    <ToggleButton.Resources>
        <converter:ColorIntensityConverter x:Key="ColorIntensityConverter" />
    </ToggleButton.Resources>
    <ToggleButton.Style>
        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <DockPanel>

                            <!-- Button Display -->
                            <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="{Binding CornerRadius, 
                                                  RelativeSource={RelativeSource AncestorType=local:ButtonPopup} }" SnapsToDevicePixels="true"
                                    Cursor="Hand">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <!-- On hover effect -->
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{Binding HoverColor, 
                                              RelativeSource={RelativeSource AncestorType=local:ButtonPopup},
                                                Converter={StaticResource ColorIntensityConverter}, ConverterParameter=2|200}"/>
                            </Trigger>
                            <!-- Selected effect -->
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{Binding SelectedBackgroundColor, 
                                              RelativeSource={RelativeSource AncestorType=local:ButtonPopup},
                                                Converter={StaticResource ColorIntensityConverter}, ConverterParameter=2|200}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ToggleButton.Style>
</ToggleButton>
