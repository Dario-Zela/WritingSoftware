<UserControl x:Class="Blaze.UIElements.ThemeListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Blaze.UIElements"
             xmlns:converter="clr-namespace:Blaze.Core"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             Background="White"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks">
    <UserControl.Resources>
        <converter:ColorIntensityConverter x:Key="ColorIntensityConverter" />
        <converter:BoolToVisibilityConverter x:Key="BoolToVis" TrueValue="Visible" FalseValue="Hidden" />
    </UserControl.Resources>

    <ListView x:Name="ContainerListView">
        <ListView.Resources>

            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Margin="0,0,0,10"
                                    SnapsToDevicePixels="true"
                                    Cursor="Hand"
                                    Padding="{Binding ItemMargin, 
                                              RelativeSource={RelativeSource AncestorType=local:ThemeListView} }">
                                <DockPanel>
                                    <TextBox HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                             Text="{TemplateBinding Content}"
                                             Background="Transparent"
                                             BorderThickness="0"
                                             IsReadOnly="True"
                                             TextWrapping="Wrap"
                                             Cursor="Hand">
                                        <TextBoxBase.SelectionBrush>
                                            <SolidColorBrush Color="Blue"/>
                                        </TextBoxBase.SelectionBrush>
                                        <TextBoxBase.SelectionTextBrush>
                                            <SolidColorBrush Color="White"/>
                                        </TextBoxBase.SelectionTextBrush>
                                    </TextBox>
                                    <DockPanel HorizontalAlignment="Right"
                                                VerticalAlignment="Top">
                                        <local:CustomButton Content="Edit"
                                                            Background="{DynamicResource ApplicationSecondaryBrush}"
                                                            Foreground="{DynamicResource OnApplicationSecondaryBrush}"
                                                            CornerRadius="10"
                                                            Padding="10,2,10,2"
                                                            Margin="0,0,30,0"
                                                            Visibility="{TemplateBinding IsSelected, Converter={StaticResource BoolToVis}}"
                                                            HoverColor="{DynamicResource ApplicationSecondaryBrush}"/>
                                        <local:ButtonNoHover Cursor="Arrow"
                                                Background="Transparent"
                                                BorderThickness="0"
                                                           Margin="0,0,5,0"
                                                             
                                                VerticalAlignment="Center">

                                            <iconPacks:MaterialDesign Kind="DragHandle"
                                                                      Width="20"/>
                                        </local:ButtonNoHover>
                                        <local:ButtonPopup Cursor="Arrow"
                                                            BorderThickness="0"
                                                           VerticalAlignment="Center"
                                                           Padding="7"
                                                           CornerRadius="20"
                                                           HoverColor="{DynamicResource ApplicationSurfaceBrush}"
                                                           SelectedBackgroundColor="{DynamicResource ApplicationSurfaceBrush}"
                                                           x:Name="MoreButton">
                                            <iconPacks:MaterialDesign Kind="MoreVert"
                                                                      Width="10"
                                                                      Height="15"/>

                                        </local:ButtonPopup>
                                        <Popup x:Name="PopupMenu" IsOpen="{Binding IsChecked, ElementName=MoreButton}"
                                                            StaysOpen="False"
                                                            AllowsTransparency="True"
                                                            PlacementTarget = "{Binding ElementName = MoreButton}">
                                            <local:MenuContent CornerRadius="10"
                                                               ItemMargin="10"
                                                               Background="{DynamicResource ApplicationSurfaceBrush}"
                                                               HoverColor="{DynamicResource ApplicationSurfaceBrush}">
                                                <ListViewItem Content="Test"/>
                                                <ListViewItem Content="Test"/>
                                                <ListViewItem Content="Test"/>
                                            </local:MenuContent>
                                        </Popup>
                                    </DockPanel>
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="Bd"
                                            Value="{Binding ItemMouseOverColor, 
                                                Converter={StaticResource ColorIntensityConverter},
                                                ConverterParameter=0.5|100,
                                                 RelativeSource={RelativeSource AncestorType=local:ThemeListView}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="False" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="Bd"
                                            Value="{Binding ItemInactiveColor, 
                                                Converter={StaticResource ColorIntensityConverter},
                                                ConverterParameter=0.5|100,
                                                 RelativeSource={RelativeSource AncestorType=local:ThemeListView}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive"
                                                   Value="True" />
                                        <Condition Property="IsSelected"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="Bd"
                                            Value="{Binding ItemSelectedActiveColor,  
                                                Converter={StaticResource ColorIntensityConverter},
                                                ConverterParameter=0.5|100,
                                                 RelativeSource={RelativeSource AncestorType=local:ThemeListView}}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ListView.Resources>
        <ListView.Style>
            <Style TargetType="ListView">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <Border Background="{Binding Background, 
                                                 RelativeSource={RelativeSource AncestorType=local:ThemeListView} }">
                                <ItemsPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ListView.Style>
        <ListViewItem 
            FontFamily="{DynamicResource ApplicationBodyFont}" 
            FontSize="{DynamicResource ApplicationBodyFontSize}" 
            Content="Test1"/>
        <ListViewItem             
            FontFamily="{DynamicResource ApplicationBodyFont}" 
            FontSize="{DynamicResource ApplicationBodyFontSize}" 
            Content="Test1"/>
        <ListViewItem 
            FontFamily="{DynamicResource ApplicationBodyFont}" 
            FontSize="{DynamicResource ApplicationBodyFontSize}"
            Content="Test1"/>
    </ListView>
    
</UserControl>
