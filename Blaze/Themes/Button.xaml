<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:Extentions="clr-namespace:Blaze.Extentions"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <!-- Button With Icon -->
    <!-- Close Button et al -->

    <Style TargetType="{x:Type Button}"
           x:Key="ButtonWithIcon">
        <Style.Setters>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:CornerRadiusExtention.Property)}"
                                Background="{TemplateBinding Background}"
                                x:Name="Border_Button">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="2*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                
                                <!-- Icon -->

                                <iconPacks:PackIconCodicons Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:Codicons.Property)}"
                                                            Foreground="{TemplateBinding Foreground}"
                                                            Grid.Column="1"
                                                            Grid.Row="1"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            
                            <!-- Color Change Triggers -->

                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="Border_Button"
                                        Property="Background"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:IsMouseOverColor.Property)}" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="Border_Button"
                                        Property="Background"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:IsPressedColor.Property)}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style.Setters>

    </Style>

    <!-- Button With Different Icon Type -->
    <!-- Move Button On Pannel et al-->

    <Style TargetType="{x:Type Button}"
           x:Key="ButtonWithIcon2">
        <Style.Setters>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:CornerRadiusExtention.Property)}"
                                Background="{TemplateBinding Background}"
                                x:Name="Border_Button">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="2*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <!-- Icon -->

                                <iconPacks:PackIconCoolicons Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:Coolicons.Property)}"
                                                             Foreground="{TemplateBinding Foreground}"
                                                             Grid.Column="1"
                                                             Grid.Row="1"
                                                             Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:IconHeight.Property)}"
                                                             HorizontalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>

                            <!-- Color Change Triggers -->

                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="Border_Button"
                                        Property="Background"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:IsMouseOverColor.Property)}" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="Border_Button"
                                        Property="Background"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:IsPressedColor.Property)}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style.Setters>

    </Style>

    <!-- Toggle Button With Icon -->

    <Style TargetType="{x:Type ToggleButton}"
           x:Key="ToggleButtonWithIcon">
        <Style.Setters>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:CornerRadiusExtention.Property)}"
                                Background="{TemplateBinding Background}"
                                x:Name="Border_Button">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="2*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <!-- Icon -->

                                <iconPacks:PackIconCoolicons Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:Coolicons.Property)}"
                                                             Foreground="{TemplateBinding Foreground}"
                                                             Grid.Column="1"
                                                             Grid.Row="1"
                                                             Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:IconHeight.Property)}"
                                                             HorizontalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>

                            <!-- Color Change Triggers -->

                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="Border_Button"
                                        Property="Background"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:IsMouseOverColor.Property)}" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="Border_Button"
                                        Property="Background"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:IsPressedColor.Property)}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style.Setters>

    </Style>

    <!-- Button With The Same Style As The Menu's -->

    <Style TargetType="{x:Type Button}"
           x:Key="MenuButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Extentions:NegateValueConverter x:Key="Negate" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>

                            <!-- Border -->

                            <Border Grid.ColumnSpan="2"
                                    Name="Border"
                                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:CornerRadiusExtention.Property)}"
                                    Background="White"/>
                        </Grid>

                        <!-- Header -->

                        <TextBlock x:Name="Header"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Extentions:Header.Property)}"
                                   Margin="10,3,23,3"
                                   Focusable="True"
                                   Background="Transparent"
                                   Foreground="Black" />

                    </Grid>
                    <ControlTemplate.Triggers>

                        <!-- Color Change Triggers -->

                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="DarkGray" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>